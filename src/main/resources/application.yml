server:
  port: 1117


spring:
  application:
    name: JMes

  redis:
    database: 7
    host: 192.168.1.188
    port: 6379
    password: 123456
    lettuce:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
    timeout: 3000


  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.1.188:3306/sword?autoReconnect=true&useUnicode=true&amp&characterEncoding=UTF-8&rewriteBatchedStatements=TRUE
    username: root
    password: root
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: select 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall,slf4j
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      use-global-data-source-stat: true

  jpa:
    database: mysql
    show-sql: true
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: true

# 验证码配置
kaptcha:
  enable: true
  border:
    enabled: yes
    color: black
    thickness: 1
  producer:
    impl: com.lz.sword.common.kaptcha.MyProducer
  wordrenderer:
    impl: com.lz.sword.common.kaptcha.MyWordRenderer
  noise:
    impl: com.lz.sword.common.kaptcha.MyNoise
    color: 0,0,0
  textproducer:
    impl: com.google.code.kaptcha.text.impl.DefaultTextCreator
    char:
      string: 23456789
      length: 4
      space: 10
    font:
      names: Arial
      size: 60
      color: black
  obscurificator:
    impl: com.google.code.kaptcha.impl.WaterRipple
  background:
    impl: com.google.code.kaptcha.impl.DefaultBackground
    clear:
      from: lightGray
      to: white
  image:
    width: 200
    height: 80

sword:
  record-log:
    enable: true

logging:
  file:
    path: /home
    name: ${logging.file.path}/${spring.application.name}.log
  level:
    org:
      springframework: WARN
      hibernate:
        type:
          descriptor:
            sql:
              BasicBinder: trace
    root: INFO
    springfox: WARN
    com:
      sword: DEBUG

